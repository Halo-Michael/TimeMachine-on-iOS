#!/bin/sh

if [[ $(/usr/bin/id -u) -ne 0 ]]; then
	echo "Run this as root!"
	exit 1
fi

checkpyrootsnnum11() {
if [ $nowlinerootsnnumpy > $linerootsnnumpy11 ]; then
	for i in $(seq `expr $linerootsnnumpy11 + 1` $nowlinerootsnnumpy)
	do
		snapshotearliest=`snappy -f / -l | sed -n 3p`
		snappy -f / -d $snapshotearliest
	done
fi
}

checkilrootsnnum11() {
if [ $nowlinerootsnnumil > $linerootsnnumil11 ]; then
	for i in $(seq `expr $linerootsnnumil11 + 1` $nowlinerootsnnumil)
	do
		snapshotearliest=`snapUtil -l / | sed -n 2p`
		snapUtil -d $snapshotearliest /
	done
fi
}

checkpyrootsnnum10() {
if [ $nowlinerootsnnumpy > $linerootsnnumpy10 ]; then
	for i in $(seq `expr $linerootsnnumpy10 + 1` $nowlinerootsnnumpy)
	do
		snapshotearliest=`snappy -f / -l | sed -n 2p`
		snappy -f / -d $snapshotearliest
	done
fi
}

checkilrootsnnum10() {
if [ $nowlinerootsnnumil > $linerootsnnumil10 ]; then
	for i in $(seq `expr $linerootsnnumil10 + 1` $nowlinerootsnnumil)
	do
		snapshotearliest=`snapUtil -l / | sed -n 1p`
		snapUtil -d $snapshotearliest /
	done
fi
}

checkpydatasnnum() {
if [ $nowlinedatasnnumpy > $linedatasnnumpy ]; then
	for i in $(seq `expr $linedatasnnumpy + 1` $nowlinedatasnnumpy)
	do
		snapshotearliest=`snappy -f /private/var -l | sed -n 2p`
		snappy -f /private/var -d $snapshotearliest
	done
fi
}

checkildatasnnum() {
if [ $nowlinedatasnnumil > $linedatasnnumil ]; then
	for i in $(seq `expr $linedatasnnumil + 1` $nowlinedatasnnumil)
	do
		snapshotearliest=`snappy -f /private/var -l | sed -n 2p`
		snappy -f /private/var -d $snapshotearliest
	done
fi
}

echo "You are setting TimeMachine now! If you DO NOT KNOW WHAT ARE YOU DOING, please press any key except y to exit."
sleep 2
read -p "Are you really know you are setting TimeMachine?(y/n)" confirm
if [ "$confirm"x = "y"x ]; then
	read -p "Enter 1 and return to select the number of snapshots you need to create for TimeMachine; enter 2 and return to restore the default settings for TimeMachine; enter any other characters and return or return directly to exit.(1/2/?)" choice
	if [ "$choice"x = "1"x ]; then
		echo "Now setting TimeMachine."
		read -p "Please set the maximum number of rootfs snapshot backups for TimeMachine:" setrootsnnum
		read -p "Please set the maximum number of datafs snapshot backups for TimeMachine:" setdatasnnum
		read -p "Are you sure you want to backup up up at most ${setrootsnnum} snapshot for the rootfs and ${setdatasnnum} snapshots for the datafs?(y/n)" makesure
		if [ "$makesure"x = "y"x ]; then
			if [ ! -f "/var/mobile/Library/Preferences/com.michael.TimeMachine.plist" ]; then
				plutil -create /var/mobile/Library/Preferences/com.michael.TimeMachine.plist
			fi
			plutil -key setrootsnnum -int ${setrootsnnum} /var/mobile/Library/Preferences/com.michael.TimeMachine.plist
			plutil -key setdatasnnum -int ${setdatasnnum} /var/mobile/Library/Preferences/com.michael.TimeMachine.plist
			echo "Successfully set TimeMachine to backup up up at most ${setrootsnnum} snapshot for rootfs and ${setdatasnnum} snapshots for datafs, now delete the extra snapshot."
			rootsnnum11=`expr $setrootsnnum + 1`
			rootsnnum10=$setrootsnnum
			linerootsnnumpy11=`expr $rootsnnum11 + 1`
			linerootsnnumpy10=`expr $rootsnnum10 + 1`
			linerootsnnumil11=$rootsnnum11
			linerootsnnumil10=$rootsnnum10
			datasnnum=$setdatasnnum
			linedatasnnumpy=`expr $datasnnum + 1`
			linedatasnnumil=$datasnnum
			nowlinedatasnnumpy=`snappy -f /private/var -l | sed -n '$='`
			nowlinedatasnnumil=`snapUtil -l /private/var | sed -n '$='`
			Version=`sw_vers -productVersion`
			if [[ $Version == 11.* ]] || [[ $Version == 12.* ]];then
				if [ -f "/usr/bin/snappy" ];then
					echo "snappy founded"
					nowlinerootsnnumpy=`snappy -f / -l | sed -n '$='`
					checkpyrootsnnum11
					checkpydatasnnum
				else
					echo "snapUtil founded"
					nowlinerootsnnumil=`snapUtil -l / | sed -n '$='`
					checkilrootsnnum11
					checkildatasnnum
				fi
			else
				if [ -f "/usr/bin/snappy" ];then
					echo "snappy founded"
					nowlinerootsnnumpy=`snappy -f / -l | sed -n '$='`
					checkpyrootsnnum10
					checkpydatasnnum
				else
					echo "snapUtil founded"
					nowlinerootsnnumil=`snapUtil -l / | sed -n '$='`
					checkilrootsnnum10
					checkildatasnnum
				fi
			fi
			echo "Successfully delete the extra snapshot."
			echo "Now exit."
			sleep 3
			exit 0
		elif [ "$makesure"x = "n"x ]; then
			echo "Users chose to stop, now exit."
			echo "Now exit."
			sleep 2
			exit 0
		else
			echo "You may have typed incorrectly. Please check your input carefully and try again."
			echo "Now exit."
			sleep 2
			exit 1
		fi
	elif [ "$choice"x = "2"x ]; then
		rm -rf /var/mobile/Library/Preferences/com.michael.TimeMachine.plist
		echo "TimeMachine has restored its default settings."
		echo "Now exit."
		sleep 2
		exit 0
	else
		echo "Now exit."
		sleep 1
		exit 0
	fi
elif [ "$confirm"x = "n"x ]; then
	echo "Users chose to stop, now exit."
	sleep 1
	exit 0
else
	echo "Invalid parameters, you have no idea what are you doing! Now exit!"
	sleep 2
	exit 1
fi
