#!/bin/bash

Version=`sw_vers -productVersion`
if [[ ${Version} == 11.* ]] || [[ ${Version} == 12.* ]];then
	echo "iOS11 or iOS12 founded, now checking orig snapshot..."
	if [ -f "/usr/bin/snappy" ];then
		tool=snappy
	elif [ -f "/usr/bin/snapUtil" ];then
		tool=snapUtil
	else
		echo "Unable to get the tool that depend on."
		exit 1
	fi
	if [[ ${tool} == "snappy" ]];then
		check_orig_fs=`snappy -f / -l | grep "^orig-fs$"`
		check_electra_prejailbreak=`snappy -f / -l | grep "^electra-prejailbreak$"`
		if [[ "${check_orig_fs}" == "orig-fs" ]];then
			snappy -f / -r orig-fs --to com.apple.TimeMachine.orig-fs
			if [[ $? == 0 ]];then
				echo "Successful rename snapshot orig-fs on rootfs to com.apple.TimeMachine.orig-fs."
			fi
		fi
		if [[ "${check_electra_prejailbreak}" == "electra-prejailbreak" ]];then
			snappy -f / -r electra-prejailbreak --to com.apple.TimeMachine.electra-prejailbreak
			if [[ $? == 0 ]];then
				echo "Successful rename snapshot electra-prejailbreak on rootfs to com.apple.TimeMachine.orig-fs."
			fi
		fi
	elif [[ ${tool} == "snapUtil" ]];then
		check_orig_fs=`snapUtil -l / | grep "^orig-fs$"`
		check_electra_prejailbreak=`snapUtil -l / | grep "^electra-prejailbreak$"`
		if [[ "${check_orig_fs}" == "orig-fs" ]];then
			snapUtil -n orig-fs com.apple.TimeMachine.orig-fs /
			if [[ $? == 0 ]];then
				echo "Successful rename snapshot orig-fs on rootfs to com.apple.TimeMachine.orig-fs."
			fi
		fi
		if [[ "${check_electra_prejailbreak}" == "electra-prejailbreak" ]];then
			snapUtil -n electra-prejailbreak com.apple.TimeMachine.electra-prejailbreak /
			if [[ $? == 0 ]];then
				echo "Successful rename snapshot electra-prejailbreak on rootfs to com.apple.TimeMachine.orig-fs."
			fi
		fi
	fi
elif [[ ${Version} == 10.* ]];then
	echo "iOS10 founded, skip orig snapshot check."
else
	echo "Wrong iOS version detected, now exit."
	exit 1
fi

if [ -f "/var/mobile/Library/Preferences/com.michael.TimeMachine.plist" ];then
	if [[ `plutil -key setrootsnnum /var/mobile/Library/Preferences/com.michael.TimeMachine.plist` ]];then
		plutil -key max_rootfs_snapshot -int `plutil -key setrootsnnum /var/mobile/Library/Preferences/com.michael.TimeMachine.plist` /var/mobile/Library/Preferences/com.michael.TimeMachine.plist
		plutil -key setrootsnnum -remove /var/mobile/Library/Preferences/com.michael.TimeMachine.plist
	fi
	if [[ `plutil -key setdatasnnum /var/mobile/Library/Preferences/com.michael.TimeMachine.plist` ]];then
		 plutil -key max_datafs_snapshot -int `plutil -key setdatasnnum /var/mobile/Library/Preferences/com.michael.TimeMachine.plist` /var/mobile/Library/Preferences/com.michael.TimeMachine.plist
		plutil -key setdatasnnum -remove /var/mobile/Library/Preferences/com.michael.TimeMachine.plist
	fi
fi
